#!/bin/bash
#
# INSTALLATION
#   ./install
#
installdir=~

function makelink {
    target=$1
    link_name=$2

    echo "linking $target to $link_name"
    ln -nfs "$target" "$link_name"
}

# since readlink -f doesn't work in osx
function abspath() {
    [[ $1 = /* ]] && echo "$1" || echo "$PWD/${1#./}"
}

#make sure we have oh-my-zsh
export GIT_SSL_NO_VERIFY=true
if [ ! -d ~/.oh-my-zsh ]; then
  wget --no-check-certificate https://github.com/robbyrussell/oh-my-zsh/raw/master/tools/install.sh -O - | sh
fi

# install lunar vim 
if [ ! -d ~/.config/lvim ]; then
    LV_BRANCH='release-1.4/neovim-0.9' bash <(curl -s https://raw.githubusercontent.com/LunarVim/LunarVim/release-1.4/neovim-0.9/utils/installer/install.sh)
fi

#backup old stuff
if [ -z "$NO_BACKUP" -o "$NO_BACKUP" != "true" ]; then
    files=( .vimrc .vim .gitconfig .bashrc .bash .irbrc .ackrc .screenrc bin .zshrc .oh-my-zsh/custom/aliases.zsh .oh-my-zsh/custom/env.zsh 'Library/Application Support/Code/User/settings.json' 'Library/Application Support/Code/User/keybindings.json' )
    for file in "${files[@]}"; do
        if [ -e "$HOME/$file" ] && [ ! -h "$HOME/$file" ]; then
            echo "$file exists"
            mv "$HOME/$file" "$HOME/$file.$$.bak"
        fi
    done
fi

cur=$(dirname "$(abspath $0)")

makelink $cur/config.lua      $installdir/.config/lvim/config.lua
makelink $cur/bashrc          $installdir/.bashrc
makelink $cur/bash            $installdir/.bash
makelink $cur/irbrc           $installdir/.irbrc
makelink $cur/ackrc           $installdir/.ackrc
makelink $cur/screenrc        $installdir/.screenrc
makelink $cur/bin             $installdir/bin
makelink $cur/zshrc           $installdir/.zshrc
makelink $cur/zsh/aliases.zsh $installdir/.oh-my-zsh/custom/
makelink $cur/zsh/env.zsh     $installdir/.oh-my-zsh/custom/
makelink $cur/gitconfig       $installdir/.gitconfig
makelink $cur/vscode/settings.json     "$installdir/Library/Application Support/Code/User/settings.json"
makelink $cur/vscode/keybindings.json  "$installdir/Library/Application Support/Code/User/keybindings.json"

#only if ssh dir isn't already there...
if [ ! -d $installdir/.ssh ]; then
    makelink $cur/ssh    $installdir/.ssh
fi

# put secrets in place
secrets_dir=~/.dotfiles-secrets
if [ -d "$secrets_dir" ]; then
    makelink $secrets_dir/ssh-config    $installdir/.ssh/config
fi

touch ~/.dotfiles-installed
