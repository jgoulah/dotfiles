#!/bin/bash

function makelink {
    target=$1
    link_name=$2

    echo "installing $target to $link_name"
    ln -s $target $link_name 
}

# since readlink -f doesn't work in osx
function abspath() {
    [[ $1 = /* ]] && echo "$1" || echo "$PWD/${1#./}"
}

#make sure we have oh-my-zsh
export GIT_SSL_NO_VERIFY=true
wget --no-check-certificate https://github.com/robbyrussell/oh-my-zsh/raw/master/tools/install.sh -O - | sh

#backup old stuff
files=( .vimrc .vim .gitconfig .bashrc .bash .irbrc .ackrc .screenrc bin .zshrc .oh-my-zsh/custom/aliases.zsh .oh-my-zsh/custom/env.zsh )
for file in "${files[@]}"; do
    if [ -e ~/$file ]; then
        echo "$file exists"
        mv ~/$file ~/$file.$$.bak
    elif [ -h ~/$file ]; then
        echo "symlink $file exists"
        rm -f ~/$file
    fi
done

cur=$(dirname "$(abspath $0)")

makelink $cur/vimrc    ~/.vimrc
makelink $cur/dotvim   ~/.vim 
makelink $cur/bashrc   ~/.bashrc
makelink $cur/bash     ~/.bash
makelink $cur/irbrc    ~/.irbrc
makelink $cur/ackrc    ~/.ackrc
makelink $cur/screenrc ~/.screenrc
makelink $cur/bin      ~/bin
makelink $cur/zshrc    ~/.zshrc
makelink $cur/zsh/aliases.zsh ~/.oh-my-zsh/custom/ 
makelink $cur/zsh/env.zsh ~/.oh-my-zsh/custom/ 

#github config
gitpass=( ~/.github_pass /etc/github_pass )
for file in "${gitpass[@]}"; do
    if [ -f $file ]; then
        echo "using $file"
        token=$(cat $file)
        sed "s/__GITHUB_TOKEN__/$token/" < $cur/gitconfig.tmpl > $cur/gitconfig
        makelink $cur/gitconfig ~/.gitconfig
        break
    else
        echo "skipping $file"
    fi
done
